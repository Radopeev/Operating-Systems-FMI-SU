#!/bin/bash

maxnumber=0

 while read line;do
         number=$(echo "${line}" |  grep -E "^[-]*[0-9]+$")
         echo "${number}" | grep -q   "-"
         if [ "${?}" -eq 0 ]; then
                 number=$(echo "${number}" | cut -d '-' -f 2)
        fi
        #echo "${number}"
        if [ ! -z "${number}" ]; then
                if [ ${number} -gt ${maxnumber} ]; then
                        maxnumber=$(echo "${number}")
                fi
        fi
done < "${1:-/dev/stdin}"

result=$(mktemp)
while read line; do
        echo "${line}" | grep "${maxnumber}" >> $result
done < "${1:-/dev/stdin}"

cat $result | sort | uniq

rm "${result}"

###############################################################################
#!/bin/bash

minnumber=1000000
maxsum=0

while read line; do
        number=$(echo "${line}" | grep -E "^[-]*[0-9]+$")
        echo "${number}" | grep -q '-'
        if [ -n "$number" ]; then
                if [ "${?}" -eq 0 ]; then
                        number=$(echo "${number}" | cut -d '-' -f 2)
                fi

                currsum=0
                while IFS=  read -r  num; do
                        currsum=$(( currsum + num ))
                done < <(echo "$number" | grep -o .)
                if [ "$currsum" -gt "$maxsum" ] && [ "$currsum" -ne 0 ]; then
                        maxsum=$currsum
                        minnumber=$number
                elif [ "$currsum" -eq "$maxsum" ] && [ "$number" -lt "$minnumber" ]; then
                        minnumber=$number
                fi
        fi
done < "${1:-/dev/stdin}"

echo "${minnumber}"
