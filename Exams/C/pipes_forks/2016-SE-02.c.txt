#include <unistd.h>
#include <err.h>
#include <sys/wait.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(void) {
        char command[64];

        while(1) {
                if(write(1,"Enter command: ",strlen("Enter command: ")) < 0) {
                        err(1,"write error");
                }

                ssize_t bytesRead = read(0,command,sizeof(command));
                if(bytesRead  < 0) {
                        err(1,"read error");
                }


                command[bytesRead - 1] = '\0';

                if(strcmp(command,"exit") == 0) {
                        exit(0);
                }

                pid_t child = fork();

                if(child < 0) {
                        err(1,"fork error");
                }

                if(child == 0) {

                        if(execlp(command,command,(char*)NULL) < 0) {
                                err(1,"execlp error");
                        }
                }

                int status;
                if(wait(&status) == -1) {
                        err(1,"wait error");
                }

                if(!WIFEXITED(status)) {
                        warnx("child did not terminate normally");
                }

                if(WEXITSTATUS(status) != 0) {
                        warnx("child exited not with 0");
                }
        }
}
