#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <err.h>
#include <stdio.h>
#include <sys/wait.h>

int main(int argc,char* argv[]){
        if(argc < 3) {
                errx(1,"args error");
        }

        int prag = atoi(argv[1]);
        char* Q = argv[2];
        char** args = argv + 2;
        int fd = open("run.log",O_CREAT | O_TRUNC | O_WRONLY,0644);
        int condition = 0;

        if(fd < 0) {
                err(1,"open error");
        }

        while(1) {
                pid_t child = fork();
                if(child < 0) {
                        close(fd);
                        err(1,"fork error");
                }

                if(child == 0) {
                        if(execlp(Q,Q,args,(char*)NULL) < 0) {
                                close(fd);
                                err(1,"exec error");
                        }
                } else {
                        time_t start_time = time(NULL);
                        int status;
                        if(wait(&status) == -1) {
                                close(fd);
                                err(1,"wait error");
                        }
                        time_t end_time = time(NULL);

                        int exit_code;
                        if(WIFEXITED(status)) {
                                exit_code = WEXITSTATUS(status);
                        } else {
                                exit_code = 129;
                        }

                        dprintf(fd,"%ld %ld %d\n",start_time,end_time,exit_code);

                        if(exit_code != 0 && (prag > (end_time - start_time))) {
                                if(condition == 1) {
                                        break;
                                } else {
                                        condition = 1;
                                }
                        } else {
                                condition = 0;
                        }
                }
        }
        close(fd);
        return 0;
}
